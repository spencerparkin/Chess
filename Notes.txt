

  I've decided to use CSS grid, HTML drag-and-drop, and React.  A Python server will handle the serving of just one page (the game page), and then a bunch of AJAX requests.  The server will be backed by a Mongo database.  Each document in a collection will store the state of a single game by name.  The game page shows the board, which game you're choosing to view (by name), and which player you're choosing to be (black or white).  A web-socket might be used to let the server tell the client when it needs to update state.  It might be simpler, however, to let the game page send out an AJAX request that does not get answered until the state changes.  If time-outs are an issue, this request can be continued to be made over rand over.  In any case, the goal is for the game to update state for both players as fast as either makes a move.  It would be nice if the drag-and-drop had real-time feedback as to whether a considered move is valid.  Valid landing spots may be drawn green, while those invalid, red.  I think the best way to implement the real-time feedback is to have a request that, given a piece, tells you all valid target locations for that piece.  The javascript can then use that cached information during dragging to toggle highlights.  Use "observables" to do AJAX stuff?  Can I cancel these kinds of requests?  I may need to.